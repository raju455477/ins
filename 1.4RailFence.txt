//1.4RailFence

//prac1.4



import java.util.*;  
public class RailFence {  
 
    String Encryption(String plainText, int depth) throws Exception{ 
        int r = depth, len = plainText.length(); 
        int c = len / depth; 
        c = c + 1; 
        char mat[][] = new char[r][c]; 
        int k = 0;  
        String cipherText = ""; 
        for(int i = 0; i < c; i++){ 
            for(int j = 0; j < r; j++){ 
                if(k != len){ 
                    mat[j][i] = plainText.charAt(k++); 
                    System.out.println("mat[" + j + "][" + i + "] = " + mat[j][i]); 
                } 
            } 
        } 
        for(int i = 0; i < r; i++){ 
            for(int j = 0; j < c; j++){ 
                cipherText += mat[i][j]; 
            } 
        }  
        return cipherText; 
    } 
     
    String Decryption(String cipherText, int depth) throws Exception{ 
        int r = depth, len = cipherText.length();
         int c = len / depth; 
        char mat[][] = new char[r][c]; 
        int k = 0;  
        String plainText = ""; 
        for(int i = 0; i < r; i++){ 
            for(int j = 0; j < c; j++){ 
                if(k != len){ 
                    mat[i][j] = cipherText.charAt(k++); 
                } 
            } 
        } 
        for(int i = 0; i < c; i++){ 
            for(int j = 0; j < r; j++){ 
                plainText += mat[j][i]; 
            } 
        }  
        return plainText; 
    } 
} 
 
class RailfenceB{  
    public static void main(String[] args) throws Exception{   
        Scanner sc = new Scanner(System.in); 
        int depth;  
        RailFence rf = new RailFence();  
        String plainText, cipherText, decreptedText;  
 
        System.out.println("Enter plain text :- "); 
        plainText = sc.nextLine();  
 
        System.out.println("Enter depth(No of Rails) for Encryptions :- "); 
        depth = sc.nextInt();  
        
 
        cipherText = rf.Encryption(plainText, depth); 
        System.out.println("Encrypted text is : -\n" + cipherText); 
 
        decreptedText = rf.Decryption(cipherText, depth); 
        System.out.println("Decrypted text is : -\n" + decreptedText); 
    }
}